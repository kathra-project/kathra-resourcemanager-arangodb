/*
 * Copyright (c) 2020. The Kathra Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contributors:
 *    IRT SystemX (https://www.kathra.org/)
 *
 */

package org.kathra.resourcemanager.catalogentrypackage.dao;

import com.arangodb.springframework.annotation.Document;
import com.arangodb.springframework.annotation.Relations;
import org.kathra.core.model.CatalogEntryPackage;
import org.kathra.core.model.CatalogEntryPackage.*;
import org.kathra.resourcemanager.resource.dao.AbstractResourceDb;
import java.util.List;

import org.kathra.resourcemanager.catalogentry.dao.CatalogEntryDb;
import org.kathra.resourcemanager.binaryrepository.dao.BinaryRepositoryDb;
import org.kathra.resourcemanager.sourcerepository.dao.SourceRepositoryDb;
import org.kathra.resourcemanager.pipeline.dao.PipelineDb;
import org.kathra.core.model.Asset.*;
import org.kathra.resourcemanager.catalogentrypackage.dao.CatalogEntryPackageCatalogEntryEdge;
import org.kathra.resourcemanager.catalogentrypackage.dao.CatalogEntryPackageBinaryRepositoryEdge;
import org.kathra.resourcemanager.sourcerepository.dao.SourceRepositoryCatalogEntryPackageEdge;
import org.kathra.resourcemanager.pipeline.dao.PipelineCatalogEntryPackageEdge;


/**
 * Entity class CatalogEntryPackageDb implementing db resource for class CatalogEntryPackage
 *
 * Auto-generated by resource-db-generator@1.3.0 at 2020-02-06T20:56:10.906Z
 * @author jboubechtoula
 */
@Document("CatalogEntryPackages")
public class CatalogEntryPackageDb extends AbstractResourceDb<CatalogEntryPackage> {

		@Relations(edges = CatalogEntryPackageCatalogEntryEdge.class, lazy = true) 
		private CatalogEntryDb catalogEntry; 
		private PackageTypeEnum packageType; 
		private String provider; 
		private String providerId; 
		private String url; 
		@Relations(edges = CatalogEntryPackageBinaryRepositoryEdge.class, lazy = true) 
		private BinaryRepositoryDb binaryRepository; 
		@Relations(edges = SourceRepositoryCatalogEntryPackageEdge.class, lazy = true) 
		private SourceRepositoryDb sourceRepository; 
		@Relations(edges = PipelineCatalogEntryPackageEdge.class, lazy = true) 
		private PipelineDb pipeline; 


        public CatalogEntryPackageDb() {
        }
        public CatalogEntryPackageDb(String id) {
            super(id);
        }

		public CatalogEntryDb getCatalogEntry() { return this.catalogEntry;}
		public void setCatalogEntry(CatalogEntryDb catalogEntry) { this.catalogEntry=catalogEntry;}

		public PackageTypeEnum getPackageType() { return this.packageType;}
		public void setPackageType(PackageTypeEnum packageType) { this.packageType=packageType;}

		public String getProvider() { return this.provider;}
		public void setProvider(String provider) { this.provider=provider;}

		public String getProviderId() { return this.providerId;}
		public void setProviderId(String providerId) { this.providerId=providerId;}

		public String getUrl() { return this.url;}
		public void setUrl(String url) { this.url=url;}

		public BinaryRepositoryDb getBinaryRepository() { return this.binaryRepository;}
		public void setBinaryRepository(BinaryRepositoryDb binaryRepository) { this.binaryRepository=binaryRepository;}

		public SourceRepositoryDb getSourceRepository() { return this.sourceRepository;}
		public void setSourceRepository(SourceRepositoryDb sourceRepository) { this.sourceRepository=sourceRepository;}

		public PipelineDb getPipeline() { return this.pipeline;}
		public void setPipeline(PipelineDb pipeline) { this.pipeline=pipeline;}



}
