/* 
 * Copyright 2019 The Kathra Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contributors:
 *
 *    IRT SystemX (https://www.kathra.org/)    
 *
 */

package org.kathra.resourcemanager.component.dao;

import com.arangodb.springframework.annotation.Document;
import com.arangodb.springframework.annotation.Relations;
import org.kathra.core.model.Component;
import org.kathra.core.model.Component.*;
import org.kathra.resourcemanager.resource.dao.AbstractResourceDb;
import java.util.List;

import org.kathra.resourcemanager.apiversion.dao.ApiVersionDb;
import org.kathra.resourcemanager.library.dao.LibraryDb;
import org.kathra.resourcemanager.implementation.dao.ImplementationDb;
import org.kathra.resourcemanager.sourcerepository.dao.SourceRepositoryDb;
import org.kathra.core.model.Resource.*;
import org.kathra.resourcemanager.component.dao.ComponentApiVersionEdge;
import org.kathra.resourcemanager.library.dao.LibraryComponentEdge;
import org.kathra.resourcemanager.implementation.dao.ImplementationComponentEdge;
import org.kathra.resourcemanager.sourcerepository.dao.SourceRepositoryComponentEdge;


/**
 * Entity class ComponentDb implementing db resource for class Component
 *
 * Auto-generated by resource-db-generator@1.2.0 at 2019-12-26T13:40:43.031Z
 * @author jboubechtoula
 */
@Document("Components")
public class ComponentDb extends AbstractResourceDb<Component> {

		private String description; 
		private String title; 
		@Relations(edges = ComponentApiVersionEdge.class, lazy = true) 
		private List<ApiVersionDb> versions; 
		@Relations(edges = LibraryComponentEdge.class, lazy = true) 
		private List<LibraryDb> libraries; 
		@Relations(edges = ImplementationComponentEdge.class, lazy = true) 
		private List<ImplementationDb> implementations; 
		@Relations(edges = SourceRepositoryComponentEdge.class, lazy = true) 
		private SourceRepositoryDb apiRepository; 


        public ComponentDb() {
        }
        public ComponentDb(String id) {
            super(id);
        }

		public String getDescription() { return this.description;}
		public void setDescription(String description) { this.description=description;}

		public String getTitle() { return this.title;}
		public void setTitle(String title) { this.title=title;}

		public List<ApiVersionDb> getVersions() { return this.versions;}
		public void setVersions(List<ApiVersionDb> versions) { this.versions=versions;}

		public List<LibraryDb> getLibraries() { return this.libraries;}
		public void setLibraries(List<LibraryDb> libraries) { this.libraries=libraries;}

		public List<ImplementationDb> getImplementations() { return this.implementations;}
		public void setImplementations(List<ImplementationDb> implementations) { this.implementations=implementations;}

		public SourceRepositoryDb getApiRepository() { return this.apiRepository;}
		public void setApiRepository(SourceRepositoryDb apiRepository) { this.apiRepository=apiRepository;}



}
