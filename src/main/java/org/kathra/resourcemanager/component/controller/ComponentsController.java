/*
 * Copyright (c) 2020. The Kathra Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contributors:
 *    IRT SystemX (https://www.kathra.org/)
 *
 */

package org.kathra.resourcemanager.component.controller;
import org.kathra.core.model.Component;
import org.kathra.core.model.Implementation;
import org.kathra.resourcemanager.implementation.service.ImplementationService;
import org.kathra.resourcemanager.service.ImplementationsService;
import org.kathra.utils.annotations.Eager;
import org.apache.camel.cdi.ContextName;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.ComponentScan;

import javax.inject.Named;
import java.util.List;

/**
 * Controller implementing ComponentsService
 *
 * Auto-generated by resource-db-generator@1.0.0 at 2019-01-03T13:23:13.262Z
 * @author julien.boubechtoula
 */
@org.springframework.stereotype.Component
@Named("ComponentsController")
@ContextName("ResourceManager")
@Eager
@ComponentScan(basePackages = {"org.kathra.resourcemanager"})
public class ComponentsController extends AbstractComponentsController {

    @Autowired
    ImplementationService implementationService;

    public ComponentsController() {

    }

    @Override
    public Component addComponent(Component component, String groupPath) throws Exception {
        try {
            getService().create(component, groupPath);
            return get(component.getId());
        } catch (Exception e) {
            manageException(e);
            return null;
        }
    }

    @Override
    public List<Implementation> getImplementationsComponent(String resourceId) throws Exception {
        try {
            return implementationService.getImplementationsByComponent(resourceId);
        } catch (Exception e) {
            manageException(e);
            return null;
        }
    }
}
